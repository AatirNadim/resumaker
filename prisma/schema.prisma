// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type ExperienceNode {
  title       String
  companyName String
  city        String
  state       String
  startDate   String
  endDate     String
  workSummery String
}

type EducationNode {
  universityName String
  degree         String
  major          String
  startDate      String
  endDate        String
  description    String
}

type PersonalDetailNode {
  firstName String
  lastName  String
  jobTitle  String
  address   String
  phone     String
  email     String
}

type SkillNode {
  skill  String
  rating Int
}

model ResumeWrapper {
  resumeId        String            @id @default(auto()) @map("_id") @db.ObjectId
  resumeName      String
  userEmail       String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  experiences     Experience[]
  Education       Education[]
  PersonalDetails PersonalDetails[]
  Skills          Skills[]
  summary         String
  themeColor      String
}

model Experience {
  experienceId    String           @id @default(auto()) @map("_id") @db.ObjectId
  resumeId        String           @db.ObjectId
  resumeNode      ResumeWrapper    @relation(fields: [resumeId], references: [resumeId])
  experienceNodes ExperienceNode[]
}

model Education {
  educationId    String          @id @default(auto()) @map("_id") @db.ObjectId
  resumeId       String          @db.ObjectId
  resumeNode     ResumeWrapper   @relation(fields: [resumeId], references: [resumeId])
  educationNodes EducationNode[]
}

model PersonalDetails {
  personalDetailId String        @id @default(auto()) @map("_id") @db.ObjectId
  resumeId         String        @db.ObjectId
  resumeNode       ResumeWrapper @relation(fields: [resumeId], references: [resumeId])
  firstName        String
  lastName         String
  jobTitle         String
  address          String
  phone            String
  email            String
}

model Skills {
  skillId    String        @id @default(auto()) @map("_id") @db.ObjectId
  resumeId   String        @db.ObjectId
  resumeNode ResumeWrapper @relation(fields: [resumeId], references: [resumeId])
  skillNodes SkillNode[]
}
